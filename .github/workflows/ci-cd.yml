name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-changes:
    name: Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
      kubernetes: ${{ steps.filter.outputs.kubernetes }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Detect changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

  build-frontend:
    name: Build & Push Frontend Image
    needs: check-changes
    if: needs.check-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Frontend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/news-search-nginx-frontend:${{ github.ref_name }} ./frontend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/news-search-nginx-frontend:${{ github.ref_name }}

  deploy-frontend:
    name: Deploy Frontend
    needs: build-frontend
    if: needs.check-changes.outputs.frontend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      
      - name: Get GKE Credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ vars.GCP_GKE_CLUSTER_NAME }}
          location: ${{ vars.GCP_GKE_CLUSTER_ZONE }}
          use_dns_based_endpoint: 'true'

      # use set image to rollout update with the new image
      - name: Deploy Frontend
        run: |
          kubectl set image kubernetes/frontend.yaml nginx-frontend=${{ secrets.DOCKERHUB_USERNAME }}/news-search-nginx-frontend:${{ github.ref_name }} --record

  build-deploy-backend:
    name: Build & Deploy Backend
    needs: check-changes
    if: needs.check-changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Get latest tag from the current branch
        id: get_tag
        run: |
          git fetch origin ${GITHUB_HEAD_REF} --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "::set-output name=LATEST_TAG::$latest_tag"

      - name: Build & Push Backend
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/news-search-fastapi:${{ steps.get_tag.outputs.LATEST_TAG }} ./backend
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/news-search-fastapi:${{ steps.get_tag.outputs.LATEST_TAG }}
      
      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      
      - name: Get GKE Credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ vars.GCP_GKE_CLUSTER_NAME }}
          location: ${{ vars.GCP_GKE_CLUSTER_ZONE }}
          use_dns_based_endpoint: 'true'

      # use set image to rollout update with the new image
      - name: Deploy Backend
        run: |
          kubectl set image kubernetes/backend.yaml fastapi=${{ secrets.DOCKERHUB_USERNAME }}/news-search-fastapi:${{ steps.get_tag.outputs.LATEST_TAG }} --record
       
  apply-k8s-changes:
    name: Apply Kubernetes Changes
    needs: check-changes
    if: needs.check-changes.outputs.kubernetes == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: 'google-github-actions/auth@v2'
        with:
          project_id: ${{ vars.GCP_PROJECT_ID }}
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
      
      - name: Get GKE Credentials
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: ${{ vars.GCP_GKE_CLUSTER_NAME }}
          location: ${{ vars.GCP_GKE_CLUSTER_ZONE }}
          use_dns_based_endpoint: 'true'

      - name: Rollout Kubernetes Changes
        run: |
          kubectl rollout status kubernetes/
